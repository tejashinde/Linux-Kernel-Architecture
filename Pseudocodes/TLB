// TLB is the hardware part which is checked by the CPU before the control goes to the
Page table used for CACHING
// PAGE TABLE consists of the base address and the offset (Each process has its own page table)
// LOGICAL ADDRESS consists of the address generated by the CPU and offset
// SEC_MEMORY is the secondary memory of the system where the instructions of process include

PAGE_TABLE{base address , offset}[10] , LOGICAL_ADDRESS{address , offset} , TLB , SEC_MEMORY
INPUT LOGICAL_ADDRESS
IF LOGICAL_ADDRESS in TLB:
        TLB_HIT
        PHYSICAL_ADDRESS = base_ADDRESS + OFFSET
        GO TO PHYSICAL_ADDRESS
ELSE CHECK PAGE_TABLE:
        TLB_MISS SCENARIO
        IF LOGICAL_ADDRESS IN PAGE_TABLE
                PHYSICAL_ADDRESS = base_ADDRESS + OFFSET
                GO TO PHYSICAL_ADDRESS
        ELSE
                GO TO SEC_MEMORY

//Write a pseudocode to display the segmentation fault


//PROCESS which has a base address assume 100, and has 50 instructions (Ranges 100 - 150)
//limit register which take cares of the overflowing OFFSET
//Main memory
//range is the limit register which says till where the process' instructions exist

PROCESS {i_address , instructions}[16] , OFFSET:INPUT , Main Memory{address(PROCESS.instructions)}

limit_register = base + number_of_instructions
INPUT OFFSET
if offset not in limit_register:
        SEGMENTATION FAULT or Trap
else:
        address = base + offset
        GO TO Main Memory

NOTE ; Segmentation fault occurs when a process tries to access a memory area which is not assigned to it.

// Pseudocode to display more security in EXT4 file system
JOURNAL {metadata of EXT4 fs}  "Power Failure and Recovery"
